package com.king.words.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class WordsInfoExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table wordsinfo
     *
     * @mbg.generated Wed Sep 04 12:29:19 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table wordsinfo
     *
     * @mbg.generated Wed Sep 04 12:29:19 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table wordsinfo
     *
     * @mbg.generated Wed Sep 04 12:29:19 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wordsinfo
     *
     * @mbg.generated Wed Sep 04 12:29:19 CST 2019
     */
    public WordsInfoExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wordsinfo
     *
     * @mbg.generated Wed Sep 04 12:29:19 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wordsinfo
     *
     * @mbg.generated Wed Sep 04 12:29:19 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wordsinfo
     *
     * @mbg.generated Wed Sep 04 12:29:19 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wordsinfo
     *
     * @mbg.generated Wed Sep 04 12:29:19 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wordsinfo
     *
     * @mbg.generated Wed Sep 04 12:29:19 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wordsinfo
     *
     * @mbg.generated Wed Sep 04 12:29:19 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wordsinfo
     *
     * @mbg.generated Wed Sep 04 12:29:19 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wordsinfo
     *
     * @mbg.generated Wed Sep 04 12:29:19 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wordsinfo
     *
     * @mbg.generated Wed Sep 04 12:29:19 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wordsinfo
     *
     * @mbg.generated Wed Sep 04 12:29:19 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table wordsinfo
     *
     * @mbg.generated Wed Sep 04 12:29:19 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andWordsidIsNull() {
            addCriterion("wordsId is null");
            return (Criteria) this;
        }

        public Criteria andWordsidIsNotNull() {
            addCriterion("wordsId is not null");
            return (Criteria) this;
        }

        public Criteria andWordsidEqualTo(Integer value) {
            addCriterion("wordsId =", value, "wordsid");
            return (Criteria) this;
        }

        public Criteria andWordsidNotEqualTo(Integer value) {
            addCriterion("wordsId <>", value, "wordsid");
            return (Criteria) this;
        }

        public Criteria andWordsidGreaterThan(Integer value) {
            addCriterion("wordsId >", value, "wordsid");
            return (Criteria) this;
        }

        public Criteria andWordsidGreaterThanOrEqualTo(Integer value) {
            addCriterion("wordsId >=", value, "wordsid");
            return (Criteria) this;
        }

        public Criteria andWordsidLessThan(Integer value) {
            addCriterion("wordsId <", value, "wordsid");
            return (Criteria) this;
        }

        public Criteria andWordsidLessThanOrEqualTo(Integer value) {
            addCriterion("wordsId <=", value, "wordsid");
            return (Criteria) this;
        }

        public Criteria andWordsidIn(List<Integer> values) {
            addCriterion("wordsId in", values, "wordsid");
            return (Criteria) this;
        }

        public Criteria andWordsidNotIn(List<Integer> values) {
            addCriterion("wordsId not in", values, "wordsid");
            return (Criteria) this;
        }

        public Criteria andWordsidBetween(Integer value1, Integer value2) {
            addCriterion("wordsId between", value1, value2, "wordsid");
            return (Criteria) this;
        }

        public Criteria andWordsidNotBetween(Integer value1, Integer value2) {
            addCriterion("wordsId not between", value1, value2, "wordsid");
            return (Criteria) this;
        }

        public Criteria andDocidIsNull() {
            addCriterion("docId is null");
            return (Criteria) this;
        }

        public Criteria andDocidIsNotNull() {
            addCriterion("docId is not null");
            return (Criteria) this;
        }

        public Criteria andDocidEqualTo(String value) {
            addCriterion("docId =", value, "docid");
            return (Criteria) this;
        }

        public Criteria andDocidNotEqualTo(String value) {
            addCriterion("docId <>", value, "docid");
            return (Criteria) this;
        }

        public Criteria andDocidGreaterThan(String value) {
            addCriterion("docId >", value, "docid");
            return (Criteria) this;
        }

        public Criteria andDocidGreaterThanOrEqualTo(String value) {
            addCriterion("docId >=", value, "docid");
            return (Criteria) this;
        }

        public Criteria andDocidLessThan(String value) {
            addCriterion("docId <", value, "docid");
            return (Criteria) this;
        }

        public Criteria andDocidLessThanOrEqualTo(String value) {
            addCriterion("docId <=", value, "docid");
            return (Criteria) this;
        }

        public Criteria andDocidLike(String value) {
            addCriterion("docId like", value, "docid");
            return (Criteria) this;
        }

        public Criteria andDocidNotLike(String value) {
            addCriterion("docId not like", value, "docid");
            return (Criteria) this;
        }

        public Criteria andDocidIn(List<String> values) {
            addCriterion("docId in", values, "docid");
            return (Criteria) this;
        }

        public Criteria andDocidNotIn(List<String> values) {
            addCriterion("docId not in", values, "docid");
            return (Criteria) this;
        }

        public Criteria andDocidBetween(String value1, String value2) {
            addCriterion("docId between", value1, value2, "docid");
            return (Criteria) this;
        }

        public Criteria andDocidNotBetween(String value1, String value2) {
            addCriterion("docId not between", value1, value2, "docid");
            return (Criteria) this;
        }

        public Criteria andUseridIsNull() {
            addCriterion("userId is null");
            return (Criteria) this;
        }

        public Criteria andUseridIsNotNull() {
            addCriterion("userId is not null");
            return (Criteria) this;
        }

        public Criteria andUseridEqualTo(Integer value) {
            addCriterion("userId =", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotEqualTo(Integer value) {
            addCriterion("userId <>", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridGreaterThan(Integer value) {
            addCriterion("userId >", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridGreaterThanOrEqualTo(Integer value) {
            addCriterion("userId >=", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridLessThan(Integer value) {
            addCriterion("userId <", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridLessThanOrEqualTo(Integer value) {
            addCriterion("userId <=", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridIn(List<Integer> values) {
            addCriterion("userId in", values, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotIn(List<Integer> values) {
            addCriterion("userId not in", values, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridBetween(Integer value1, Integer value2) {
            addCriterion("userId between", value1, value2, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotBetween(Integer value1, Integer value2) {
            addCriterion("userId not between", value1, value2, "userid");
            return (Criteria) this;
        }

        public Criteria andTextcontentIsNull() {
            addCriterion("textContent is null");
            return (Criteria) this;
        }

        public Criteria andTextcontentIsNotNull() {
            addCriterion("textContent is not null");
            return (Criteria) this;
        }

        public Criteria andTextcontentEqualTo(String value) {
            addCriterion("textContent =", value, "textcontent");
            return (Criteria) this;
        }

        public Criteria andTextcontentNotEqualTo(String value) {
            addCriterion("textContent <>", value, "textcontent");
            return (Criteria) this;
        }

        public Criteria andTextcontentGreaterThan(String value) {
            addCriterion("textContent >", value, "textcontent");
            return (Criteria) this;
        }

        public Criteria andTextcontentGreaterThanOrEqualTo(String value) {
            addCriterion("textContent >=", value, "textcontent");
            return (Criteria) this;
        }

        public Criteria andTextcontentLessThan(String value) {
            addCriterion("textContent <", value, "textcontent");
            return (Criteria) this;
        }

        public Criteria andTextcontentLessThanOrEqualTo(String value) {
            addCriterion("textContent <=", value, "textcontent");
            return (Criteria) this;
        }

        public Criteria andTextcontentLike(String value) {
            addCriterion("textContent like", value, "textcontent");
            return (Criteria) this;
        }

        public Criteria andTextcontentNotLike(String value) {
            addCriterion("textContent not like", value, "textcontent");
            return (Criteria) this;
        }

        public Criteria andTextcontentIn(List<String> values) {
            addCriterion("textContent in", values, "textcontent");
            return (Criteria) this;
        }

        public Criteria andTextcontentNotIn(List<String> values) {
            addCriterion("textContent not in", values, "textcontent");
            return (Criteria) this;
        }

        public Criteria andTextcontentBetween(String value1, String value2) {
            addCriterion("textContent between", value1, value2, "textcontent");
            return (Criteria) this;
        }

        public Criteria andTextcontentNotBetween(String value1, String value2) {
            addCriterion("textContent not between", value1, value2, "textcontent");
            return (Criteria) this;
        }

        public Criteria andInitpageIsNull() {
            addCriterion("initPage is null");
            return (Criteria) this;
        }

        public Criteria andInitpageIsNotNull() {
            addCriterion("initPage is not null");
            return (Criteria) this;
        }

        public Criteria andInitpageEqualTo(Integer value) {
            addCriterion("initPage =", value, "initpage");
            return (Criteria) this;
        }

        public Criteria andInitpageNotEqualTo(Integer value) {
            addCriterion("initPage <>", value, "initpage");
            return (Criteria) this;
        }

        public Criteria andInitpageGreaterThan(Integer value) {
            addCriterion("initPage >", value, "initpage");
            return (Criteria) this;
        }

        public Criteria andInitpageGreaterThanOrEqualTo(Integer value) {
            addCriterion("initPage >=", value, "initpage");
            return (Criteria) this;
        }

        public Criteria andInitpageLessThan(Integer value) {
            addCriterion("initPage <", value, "initpage");
            return (Criteria) this;
        }

        public Criteria andInitpageLessThanOrEqualTo(Integer value) {
            addCriterion("initPage <=", value, "initpage");
            return (Criteria) this;
        }

        public Criteria andInitpageIn(List<Integer> values) {
            addCriterion("initPage in", values, "initpage");
            return (Criteria) this;
        }

        public Criteria andInitpageNotIn(List<Integer> values) {
            addCriterion("initPage not in", values, "initpage");
            return (Criteria) this;
        }

        public Criteria andInitpageBetween(Integer value1, Integer value2) {
            addCriterion("initPage between", value1, value2, "initpage");
            return (Criteria) this;
        }

        public Criteria andInitpageNotBetween(Integer value1, Integer value2) {
            addCriterion("initPage not between", value1, value2, "initpage");
            return (Criteria) this;
        }

        public Criteria andPagenumIsNull() {
            addCriterion("pageNum is null");
            return (Criteria) this;
        }

        public Criteria andPagenumIsNotNull() {
            addCriterion("pageNum is not null");
            return (Criteria) this;
        }

        public Criteria andPagenumEqualTo(Integer value) {
            addCriterion("pageNum =", value, "pagenum");
            return (Criteria) this;
        }

        public Criteria andPagenumNotEqualTo(Integer value) {
            addCriterion("pageNum <>", value, "pagenum");
            return (Criteria) this;
        }

        public Criteria andPagenumGreaterThan(Integer value) {
            addCriterion("pageNum >", value, "pagenum");
            return (Criteria) this;
        }

        public Criteria andPagenumGreaterThanOrEqualTo(Integer value) {
            addCriterion("pageNum >=", value, "pagenum");
            return (Criteria) this;
        }

        public Criteria andPagenumLessThan(Integer value) {
            addCriterion("pageNum <", value, "pagenum");
            return (Criteria) this;
        }

        public Criteria andPagenumLessThanOrEqualTo(Integer value) {
            addCriterion("pageNum <=", value, "pagenum");
            return (Criteria) this;
        }

        public Criteria andPagenumIn(List<Integer> values) {
            addCriterion("pageNum in", values, "pagenum");
            return (Criteria) this;
        }

        public Criteria andPagenumNotIn(List<Integer> values) {
            addCriterion("pageNum not in", values, "pagenum");
            return (Criteria) this;
        }

        public Criteria andPagenumBetween(Integer value1, Integer value2) {
            addCriterion("pageNum between", value1, value2, "pagenum");
            return (Criteria) this;
        }

        public Criteria andPagenumNotBetween(Integer value1, Integer value2) {
            addCriterion("pageNum not between", value1, value2, "pagenum");
            return (Criteria) this;
        }

        public Criteria andStateIsNull() {
            addCriterion("state is null");
            return (Criteria) this;
        }

        public Criteria andStateIsNotNull() {
            addCriterion("state is not null");
            return (Criteria) this;
        }

        public Criteria andStateEqualTo(Integer value) {
            addCriterion("state =", value, "state");
            return (Criteria) this;
        }

        public Criteria andStateNotEqualTo(Integer value) {
            addCriterion("state <>", value, "state");
            return (Criteria) this;
        }

        public Criteria andStateGreaterThan(Integer value) {
            addCriterion("state >", value, "state");
            return (Criteria) this;
        }

        public Criteria andStateGreaterThanOrEqualTo(Integer value) {
            addCriterion("state >=", value, "state");
            return (Criteria) this;
        }

        public Criteria andStateLessThan(Integer value) {
            addCriterion("state <", value, "state");
            return (Criteria) this;
        }

        public Criteria andStateLessThanOrEqualTo(Integer value) {
            addCriterion("state <=", value, "state");
            return (Criteria) this;
        }

        public Criteria andStateIn(List<Integer> values) {
            addCriterion("state in", values, "state");
            return (Criteria) this;
        }

        public Criteria andStateNotIn(List<Integer> values) {
            addCriterion("state not in", values, "state");
            return (Criteria) this;
        }

        public Criteria andStateBetween(Integer value1, Integer value2) {
            addCriterion("state between", value1, value2, "state");
            return (Criteria) this;
        }

        public Criteria andStateNotBetween(Integer value1, Integer value2) {
            addCriterion("state not between", value1, value2, "state");
            return (Criteria) this;
        }

        public Criteria andCreatetimeIsNull() {
            addCriterion("createTime is null");
            return (Criteria) this;
        }

        public Criteria andCreatetimeIsNotNull() {
            addCriterion("createTime is not null");
            return (Criteria) this;
        }

        public Criteria andCreatetimeEqualTo(Date value) {
            addCriterion("createTime =", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotEqualTo(Date value) {
            addCriterion("createTime <>", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeGreaterThan(Date value) {
            addCriterion("createTime >", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeGreaterThanOrEqualTo(Date value) {
            addCriterion("createTime >=", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeLessThan(Date value) {
            addCriterion("createTime <", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeLessThanOrEqualTo(Date value) {
            addCriterion("createTime <=", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeIn(List<Date> values) {
            addCriterion("createTime in", values, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotIn(List<Date> values) {
            addCriterion("createTime not in", values, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeBetween(Date value1, Date value2) {
            addCriterion("createTime between", value1, value2, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotBetween(Date value1, Date value2) {
            addCriterion("createTime not between", value1, value2, "createtime");
            return (Criteria) this;
        }

        public Criteria andUpdatetimeIsNull() {
            addCriterion("updateTime is null");
            return (Criteria) this;
        }

        public Criteria andUpdatetimeIsNotNull() {
            addCriterion("updateTime is not null");
            return (Criteria) this;
        }

        public Criteria andUpdatetimeEqualTo(Date value) {
            addCriterion("updateTime =", value, "updatetime");
            return (Criteria) this;
        }

        public Criteria andUpdatetimeNotEqualTo(Date value) {
            addCriterion("updateTime <>", value, "updatetime");
            return (Criteria) this;
        }

        public Criteria andUpdatetimeGreaterThan(Date value) {
            addCriterion("updateTime >", value, "updatetime");
            return (Criteria) this;
        }

        public Criteria andUpdatetimeGreaterThanOrEqualTo(Date value) {
            addCriterion("updateTime >=", value, "updatetime");
            return (Criteria) this;
        }

        public Criteria andUpdatetimeLessThan(Date value) {
            addCriterion("updateTime <", value, "updatetime");
            return (Criteria) this;
        }

        public Criteria andUpdatetimeLessThanOrEqualTo(Date value) {
            addCriterion("updateTime <=", value, "updatetime");
            return (Criteria) this;
        }

        public Criteria andUpdatetimeIn(List<Date> values) {
            addCriterion("updateTime in", values, "updatetime");
            return (Criteria) this;
        }

        public Criteria andUpdatetimeNotIn(List<Date> values) {
            addCriterion("updateTime not in", values, "updatetime");
            return (Criteria) this;
        }

        public Criteria andUpdatetimeBetween(Date value1, Date value2) {
            addCriterion("updateTime between", value1, value2, "updatetime");
            return (Criteria) this;
        }

        public Criteria andUpdatetimeNotBetween(Date value1, Date value2) {
            addCriterion("updateTime not between", value1, value2, "updatetime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table wordsinfo
     *
     * @mbg.generated do_not_delete_during_merge Wed Sep 04 12:29:19 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table wordsinfo
     *
     * @mbg.generated Wed Sep 04 12:29:19 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}